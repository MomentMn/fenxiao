<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hansan.fenxiao.mybatisdao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.hansan.fenxiao.auto.entities.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="commission" jdbcType="DOUBLE" property="commission" />
    <result column="lastLoginIp" jdbcType="VARCHAR" property="lastloginip" />
    <result column="lastLoginTime" jdbcType="TIMESTAMP" property="lastlogintime" />
    <result column="loginCount" jdbcType="INTEGER" property="logincount" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="registerIp" jdbcType="VARCHAR" property="registerip" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="superior" jdbcType="VARCHAR" property="superior" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="statusDate" jdbcType="TIMESTAMP" property="statusdate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, createDate, deleted, version, balance, commission, lastLoginIp, lastLoginTime, 
    loginCount, name, password, phone, registerIp, status, superior, no, statusDate
  </sql>
  <select id="selectByExample" parameterType="com.hansan.fenxiao.auto.entities.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hansan.fenxiao.auto.entities.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hansan.fenxiao.auto.entities.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (createDate, deleted, version, 
      balance, commission, lastLoginIp, 
      lastLoginTime, loginCount, name, 
      password, phone, registerIp, 
      status, superior, no, 
      statusDate)
    values (#{createdate,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, #{version,jdbcType=INTEGER}, 
      #{balance,jdbcType=DOUBLE}, #{commission,jdbcType=DOUBLE}, #{lastloginip,jdbcType=VARCHAR}, 
      #{lastlogintime,jdbcType=TIMESTAMP}, #{logincount,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{registerip,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{superior,jdbcType=VARCHAR}, #{no,jdbcType=VARCHAR}, 
      #{statusdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hansan.fenxiao.auto.entities.User">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createdate != null">
        createDate,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="commission != null">
        commission,
      </if>
      <if test="lastloginip != null">
        lastLoginIp,
      </if>
      <if test="lastlogintime != null">
        lastLoginTime,
      </if>
      <if test="logincount != null">
        loginCount,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="registerip != null">
        registerIp,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="superior != null">
        superior,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="statusdate != null">
        statusDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="commission != null">
        #{commission,jdbcType=DOUBLE},
      </if>
      <if test="lastloginip != null">
        #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logincount != null">
        #{logincount,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="registerip != null">
        #{registerip,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="superior != null">
        #{superior,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="statusdate != null">
        #{statusdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hansan.fenxiao.auto.entities.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.commission != null">
        commission = #{record.commission,jdbcType=DOUBLE},
      </if>
      <if test="record.lastloginip != null">
        lastLoginIp = #{record.lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="record.lastlogintime != null">
        lastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logincount != null">
        loginCount = #{record.logincount,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.registerip != null">
        registerIp = #{record.registerip,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.superior != null">
        superior = #{record.superior,jdbcType=VARCHAR},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.statusdate != null">
        statusDate = #{record.statusdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=BIT},
      version = #{record.version,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=DOUBLE},
      commission = #{record.commission,jdbcType=DOUBLE},
      lastLoginIp = #{record.lastloginip,jdbcType=VARCHAR},
      lastLoginTime = #{record.lastlogintime,jdbcType=TIMESTAMP},
      loginCount = #{record.logincount,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      registerIp = #{record.registerip,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      superior = #{record.superior,jdbcType=VARCHAR},
      no = #{record.no,jdbcType=VARCHAR},
      statusDate = #{record.statusdate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hansan.fenxiao.auto.entities.User">
    update user
    <set>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="commission != null">
        commission = #{commission,jdbcType=DOUBLE},
      </if>
      <if test="lastloginip != null">
        lastLoginIp = #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime != null">
        lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="logincount != null">
        loginCount = #{logincount,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="registerip != null">
        registerIp = #{registerip,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="superior != null">
        superior = #{superior,jdbcType=VARCHAR},
      </if>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="statusdate != null">
        statusDate = #{statusdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hansan.fenxiao.auto.entities.User">
    update user
    set createDate = #{createdate,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      version = #{version,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DOUBLE},
      commission = #{commission,jdbcType=DOUBLE},
      lastLoginIp = #{lastloginip,jdbcType=VARCHAR},
      lastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      loginCount = #{logincount,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      registerIp = #{registerip,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      superior = #{superior,jdbcType=VARCHAR},
      no = #{no,jdbcType=VARCHAR},
      statusDate = #{statusdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>